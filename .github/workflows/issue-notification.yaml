name: Issue Notification
run-name: "Notify issue #${{ github.event.issue.number }} ${{github.event.issue.event}}"
on:
  issues:
    types: [opened, edited, closed, reopened, assigned]
permissions:
  contents: read
  issues: write
  repository-projects: write
jobs:
  notify-teams:
    name: Notify Teams
    environment: hubctl-gh-project
    runs-on: ubuntu-latest
    steps:
    - name: send notification
      uses: aliencube/microsoft-teams-actions@v0.8.0
      with:
        webhook_uri: ${{ secrets.TEAMS_WEBHOOK_URI }}
        title: "@${{github.event.issue.actor.display_login}} ${{github.event.issue.event}} ${{ github.event.repository.name }}#${{ github.event.issue.number }}: ${{ github.event.issue.title }}"
        text: ${{ github.event.issue.body }}
        actions: '[{ "@type": "OpenUri", "name": "Link", "targets": [{ "os": "default", "uri": "http://github.com/epam/${{ github.event.repository.name }}/issues/${{ github.event.issue.number }}" }] }]'
  assign-project:
    name: Assign Project
    runs-on: ubuntu-latest
    environment: hubctl-gh-project
    env:
      PROJECT_ID: ${{ vars.PROJECT_ID}}
      COLUMN_ID: ${{ vars.DEFAULT_COLUMN_ID}}
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
    - name: get issue id
      run: echo issue_node_id=$(gh api -q '.node_id' "repos/epam/${{ github.event.repository.name }}/issues/${{ github.event.issue.number }}") >> $GITHUB_ENV
    - name: Add issue to project
      run: |
        gh api graphql -f query='
          mutation($project:ID!, $content:ID!) {
            addProjectV2ItemById(input: {projectId: $project contentId: $content}) {
              item {
                id
              }
            }
          }'  -f project=$PROJECT_ID -f content=${{env.issue_node_id}}
